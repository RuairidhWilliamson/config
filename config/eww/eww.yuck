(defwindow barw [mon]
    :monitor mon
    :geometry (geometry :x "0%"
                        :y "0px"
                        :width "100%"
                        :height "20px"
                        :anchor "top center")
    :stacking "bg"
    :exclusive true
    (bar :monitor mon)
)

(defwindow clockw [mon]
    :monitor mon
    :geometry (geometry :x "0%"
                        :y "20%"
                        :width "20%"
                        :height "20%"
                        :anchor "top center")
    :stacking "bg"
    (backgroundclock)
)

(defwidget bar [monitor]
    (centerbox :orientation "h"
        (box :halign "start"
            :orientation "h"
            :space-evenly false
            (workspaces :monitor monitor)
        )
        (box)
        (box :halign "end"
            :orientation "h"
            :space-evenly false
            ; (volumeBar)
            ; (stats)
            (audioout)
            (clock)
            ; (powermenu)
        )
    )
)

(defwindow powerdrop [mon]
    :monitor mon
    :geometry (geometry :x "50%"
                        :y "20%"
                        :width "200px"
                        :height "300px"
                        :anchor "center center")
    :stacking "fg"
    (box :orientation "v"
        (button :class "container" :onclick "hyprlock" "Lock")
        (button :class "container" :onclick "loginctl terminate-user $(whoami)" "Log Out")
        (button :class "container" :onclick "systemctl reboot" "Restart")
        (button :class "container" :onclick "systemctl poweroff" "Power Off")
        (button :class "container" :onclick "eww close powerdrop" "Cancel")
    )
)

(defwidget powermenu []
    (button :class "container" :onclick "eww open powerdrop --arg mon=0" "⏻")
)

(defwidget audioout []
    (button :class "container" :onclick "eww-hypr toggle-speakers" "🎧")
)

(deflisten workspaces0 :initial "[]" "eww-hypr workspaces 0")
(deflisten workspaces1 :initial "[]" "eww-hypr workspaces 1")
(defwidget workspaces [monitor]
    (box :space-evenly true
        (for workspace in {monitor == 0 ? workspaces0 : workspaces1 }
            (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
                (box :class "workspace-entry ${workspace.active ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
                    (label :text "${workspace.id}")
                )
            )
        )
    )
)

(defwidget stats []
    (box :class "stats"
         :orientation "h"
         :halign "end"
        "CPU: ${round(EWW_CPU.avg, 1)} % "
        "Mem: ${round(EWW_RAM.used_mem_perc, 1)} % "
    )
)

(defpoll volume :interval "1s" "wpctl get-volume @DEFAULT_AUDIO_SINK@ | cut -c 11-12")
(defwidget volumeBar []
    (box :orientation "h" :class "volume-bar"
        (scale :min 0
            :max 100
            :value volume
            :halign "end"
        )
    )
)

(deflisten time :initial "" "eww-hypr clock '%H:%M  %e %b'")
(defwidget clock []
    (box :class "clock"
        :orientation "h"
        :halign "end"
        time
    )
)

(deflisten backgroundtime :initial "" "eww-hypr clock '%H %M'")
(defwidget backgroundclock []
    (box :class "background-clock"
        :orientation "h"
        :halign "center"
        :valign "start"
        backgroundtime
    )
)
